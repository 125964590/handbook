(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{521:function(n,e){n.exports="\x3c!--\ntitle: vsftp\nsort: 10\n--\x3e\n\n\nCentOS7安装配置 vsftp 搭建 FTP\n\n安装配置vsftpd做FTP服务，我们的项目应用使用git管理进行迭代，公共文件软件存储使用开源网盘Seafile来管理，基本够用。想不到FTP的使用的场景，感觉它好像老去了，虽然现在基本没有用到这个工具，刚好公司公司刷一个硬件需要使用FTP来配置下载文件，于是研究使用了一下，记录了一下使用过程。😀\n\n## 安装\n\n在安装前查看是否已安装vsftpd\n\n```bash\n# 查看是否已安装 方法一\n[root@localhost ~]# rpm -q vsftpd\nvsftpd-3.0.2-21.el7.x86_64\n\n# 查看是否已安装 方法二\n[root@localhost ~]# vsftpd -v\nvsftpd: version 3.0.2\n\n# 安装 vsftpd\n[root@localhost ~]# yum -y install vsftpd\n```\n\n## 查看位置\n\n```bash\n[root@localhost ~]# whereis vsftpd\nvsftpd: /usr/sbin/vsftpd /etc/vsftpd /usr/share/man/man8/vsftpd.8.gz\n```\n\n## 启动vsftpd服务\n\n```bash\nsystemctl start vsftpd.service\n```\n\n## 关闭firewall和SELinux\n\n```bash\nsetenforce 0   # 设置SELinux 成为permissive模式  （关闭SELinux）\nsetenforce 1   # 设置SELinux 成为enforcing模式   （开启SELinux）\n\n# 或者修改配置\nvi /etc/selinux/config\n# SELINUX=enforcing\n# 注释掉\n# SELINUXTYPE=targeted\n# 注释掉\nSELINUX=disabled\n# 增加\n:wq! #保存退出\nsetenforce 0\n```\n\n或者设置SELinux\n\n```bash\n\ngetsebool -a | grep ftp\nsetsebool -P ftpd_full_access on\n```\n\n```bash\nsystemctl stop firewalld.service\n#停止firewall\nsystemctl disable firewalld.service\n#禁止firewall开机启动\n```\n\n如果你不愿意关闭防火墙，需要防火墙添加FTP服务。\n\n```bash\nfirewall-cmd --permanent --zone=public --add-service=ftp\nfirewall-cmd --reload\n```\n\n## 修改配置文件\n\n配置文件`/etc/vsftpd/vsftpd.conf`\n\n```bash\nanonymous_enable=NO        # 不允许匿名访问，禁用匿名登录\nchroot_local_user=YES      # 启用限定用户在其主目录下\nuse_localtime=YES          # 使用本地时(自行添加)\nchroot_list_enable=YES\nlocal_enable=YES           # 允许使用本地帐户进行FTP用户登录验证\nallow_writeable_chroot=YES # 如果启用了限定用户在其主目录下需要添加这个配置，解决报错 500 OOPS: vsftpd: refusing to run with writable root inside chroot()\nxferlog_enable=YES         # 启用上传和下载的日志功能，默认开启。\nlocal_umask=022            # 设置本地用户默认文件掩码022\n# FTP上本地的文件权限，默认是077，不过vsftpd安装后的配置文件里默认是022\n```\n\n虚拟用户高级参数\n\n```\n当virtual_use_local_privs=YES 时，虚拟用户和本地用户有相同的权限；\n当virtual_use_local_privs=NO  时，虚拟用户和匿名用户有相同的权限，默认是NO。\n当virtual_use_local_privs=YES，write_enable=YES时，虚拟用户具有写权限（上传、下载、删除、重命名）。\n当virtual_use_local_privs=NO，write_enable=YES，anon_world_readable_only=YES，\nanon_upload_enable=YES时，虚拟用户不能浏览目录，只能上传文件，无其他权限。\n当virtual_use_local_privs=NO，write_enable=YES，anon_world_readable_only=NO，\nanon_upload_enable=NO时，虚拟用户只能下载文件，无其他权限。\n当virtual_use_local_privs=NO，write_enable=YES，anon_world_readable_only=NO，\nanon_upload_enable=YES时，虚拟用户只能上传和下载文件，无其他权限。\n当virtual_use_local_privs=NO，write_enable=YES，anon_world_readable_only=NO，\nanon_mkdir_write_enable=YES时，虚拟用户只能下载文件和创建文件夹，无其他权限。\n当virtual_use_local_privs=NO，write_enable=YES，anon_world_readable_only=NO，\nanon_other_write_enable=YES时，虚拟用户只能下载、删除和重命名文件，无其他权限。\n```\n\n\n## 匿名登录\n\n安装完默认情况下是开启匿名登录的，对应的是 `/var/ftp` 目录，这时只要服务启动了，就可以直接连上FTP了。默认用户名是`ftp`，密码是空的。如果你在配置里面配置了`anonymous_enable=NO`，匿名就无法登录。\n\n```bash\n$ ftp 192.168.188.114\n\nConnected to 192.168.188.114.\n220 (vsFTPd 3.0.2)\nName (192.168.188.114:kennywang): ftp\n331 Please specify the password.\nPassword:\n230 Login successful.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\nftp> ls\n229 Entering Extended Passive Mode (|||47867|).\n150 Here comes the directory listing.\n-rw-r--r--    1 0        0              12 Jan 18 06:31 README.md\ndrwxr-xr-x    2 0        0               6 Nov 05 19:43 pub\n226 Directory send OK.\n```\n\n## 多用户配置\n\n多用户配置需要自己手工添加配置，下面内容到vsftpd.conf末尾\n\n```bash\nuse_localtime=YES          # 使用本地时(自行添加)\nlisten_port=21\nchroot_local_user=YES      # 启用限定用户在其主目录下\nidle_session_timeout=300\n\ndata_connection_timeout=120  # 数据连接超时时间\nguest_enable=YES             # 设定启用虚拟用户功能\nguest_username=ftpuser       # 指定虚拟用户的宿主用户 ftpuser（就是我们后面会新建这个用户）\n# guest_username=www\n# 如果ftp目录是指向网站根目录，用来上传网站程序，\n# 可以指定虚拟用户的宿主用户为nginx运行账户www，可以避免很多权限设置问题 \n\n\nuser_config_dir=/etc/vsftpd/vuser_conf   # 虚拟用户配置文件目录\nvirtual_use_local_privs=YES # NO时，虚拟用户和匿名用户有相同的权限，默认是NO\n\npasv_min_port=10060         # 被动模式最小端口号10060\npasv_max_port=10090         # 被动模式最大端口号10090\n\naccept_timeout=5\nconnect_timeout=1\n```\n\n### 创建宿主用户\n\n新建系统用户ftpuser，用户目录为`/home/vsftpd`, 用户登录终端设为/bin/false(即使之不能登录系统)\n\n```bash \n# 方法一\n# 创建用户 ftpuser 指定 `/home/vsftpd` 目录\nuseradd -g root -M -d /home/vsftpd -s /sbin/nologin ftpuser\n\n# 设置用户 ftpuser 的密码\npasswd ftpuser\n# 把 /home/vsftpd 的所有权给ftpuser.root\nchown -R ftpuser.root /home/vsftpd\n\n# 方法二\nuseradd ftpuser -d /home/vsftpd -s /bin/false\nchown ftpuser:ftpuser /home/vsftpd -R \n\n# 如果虚拟用户的宿主用户为www，需要这样设置\n# www目录是你应用的目录\nchown www:www /home/www -R\n```\n\n删除用户 `userdel ftpuser`\n\n### 建立虚拟用户文件\n\n```bash\ntouch /etc/vsftpd/vuser_passwd\n# 编辑虚拟用户名单文件：（\n# 第一行账号，第二行密码，注意：不能使用root做用户名，系统保留）\nvi /etc/vsftpd/vuser_passwd \n# 编辑内容，下面是 vuser_passwd 内容\nwcj\n123456\nhss\n123456\n#保存退出\n```\n\n### 生成虚拟用户数据文件\n\n```bash\ndb_load -T -t hash -f /etc/vsftpd/vuser_passwd /etc/vsftpd/vuser_passwd.db\nchmod 600 /etc/vsftpd/vuser_passwd.db\n```\n\n### 创建用户配置\n\n```bash\nmkdir /etc/vsftpd/vuser_conf  # 建立虚拟用户个人vsftp的配置文件\ncd /etc/vsftpd/vuser_conf     # 进入目录\ntouch hss wcj                 # 这里创建两个虚拟用户配置文件\n```\n\n每一个文件配置文件都差不多，只是参数`local_root`不一样。\n\n```bash\nlocal_root=/home/vsftpd/hss   # 用户 hss 配置目录，这个地方不一样\nwrite_enable=YES              # 允许本地用户对FTP服务器文件具有写权限\nanon_world_readable_only=NO\nanon_upload_enable=YES        # 允许匿名用户上传文件(须将全局的write_enable=YES,默认YES)\nanon_mkdir_write_enable=YES   # 允许匿名用户创建目录\nanon_other_write_enable=YES   # 允许匿名用户删除和重命名权限(自行添加)\n```\n\n### 创建用户目录\n\n每个用户目录文件夹是有root用户创建的，也就是上面`local_root`配置目录，其权限应设置为755。因为权限的问题在该文件夹内无法直接上传文件。而如果设置为777则无法访问，这是由于vsftpd的安全性设置。解决上传问题的方法是在local_root文件夹内新建一个upload的文件夹，权限设置为777，可将文件上传到该文件夹。\n\n```bash\nmkdir -p /home/vsftpd/hss     # 每个用户对于一个目录，创建两个目录“hss”、“wcj”\n\n# 下面是目录结构\n/home/vsftpd\n      ├── hss\n      │   ├── filename.md\n      │   └── upload\n      └── wcj\n          └── filename.md\n\n\n# 赋予其权限\nchmod -R 777 /var/vsftpd/hss/upload/\n\n# 在/var/ftp下新建一个目录来实现匿名用户上传\nmkdir /var/ftp/upload\n```\n\nvsftpd中几种用户的区分：\n\n**本地用户**：用户在FTP服务器拥有账号，且该账号为本地用户的账号，可以通过自己的账号和口令进行授权登录，登录目录为自己的home目录`$HOME`  \n**虚拟用户**：用户在FTP服务器上拥有账号，但该账号只能用于文件传输服务。登录目录为某一特定的目录，通常可以上传和下载  \n**匿名用户**：用户在FTP服务器上没有账号，登录目录为/var/ftp  \n\n### 最后重启vsftpd服务器\n\n```bash\nsystemctl restart vsftpd.service\n```\n\n## 服务运维\n\n```bash\nsystemctl restart vsftpd.service  # 重启服务\nsystemctl start vsftpd.service    # 启动服务\nsystemctl status vsftpd.service   # 服务状态查看\n```\n\n## FTP命令\n\n```bash\nftp> ascii  # 设定以ASCII方式传送文件(缺省值) \nftp> bell   # 每完成一次文件传送,报警提示. \nftp> binary # 设定以二进制方式传送文件. \nftp> bye    # 终止主机FTP进程,并退出FTP管理方式. \nftp> case # 当为ON时,用MGET命令拷贝的文件名到本地机器中,全部转换为小写字母. \nftp> cd     # 同UNIX的CD命令. \nftp> cdup   # 返回上一级目录. \nftp> chmod  # 改变远端主机的文件权限. \nftp> close  # 终止远端的FTP进程,返回到FTP命令状态, 所有的宏定义都被删除. \nftp> delete # 删除远端主机中的文件. \nftp> dir [remote-directory] [local-file] # 列出当前远端主机目录中的文件.如果有本地文件,就将结果写至本地文件. \nftp> get [remote-file] [local-file] # 从远端主机中传送至本地主机中. \nftp> help [command] # 输出命令的解释. \nftp> lcd # 改变当前本地主机的工作目录,如果缺省,就转到当前用户的HOME目录. \nftp> ls [remote-directory] [local-file] # 同DIR. \nftp> macdef                 # 定义宏命令. \nftp> mdelete [remote-files] # 删除一批文件. \nftp> mget [remote-files]    # 从远端主机接收一批文件至本地主机. \nftp> mkdir directory-name   # 在远端主机中建立目录. \nftp> mput local-files # 将本地主机中一批文件传送至远端主机. \nftp> open host [port] # 重新建立一个新的连接. \nftp> prompt           # 交互提示模式. \nftp> put local-file [remote-file] # 将本地一个文件传送至远端主机中. \nftp> pwd  # 列出当前远端主机目录. \nftp> quit # 同BYE. \nftp> recv remote-file [local-file] # 同GET. \nftp> rename [from] [to]     # 改变远端主机中的文件名. \nftp> rmdir directory-name   # 删除远端主机中的目录. \nftp> send local-file [remote-file] # 同PUT. \nftp> status   # 显示当前FTP的状态. \nftp> system   # 显示远端主机系统类型. \nftp> user user-name [password] [account] # 重新以别的用户名登录远端主机. \nftp> ? [command] # 同HELP. [command]指定需要帮助的命令名称。如果没有指定 command，ftp 将显示全部命令的列表。\nftp> ! # 从 ftp 子系统退出到外壳。 \n```\n\n### 关闭FTP连接\n\n```bash\nbye\nexit\nquit\n```\n\n### 下载文件\n\n```bash\nftp> get readme.txt # 下载 readme.txt 文件\nftp> mget *.txt     # 下载 \n```\n\n### 上传文件\n\n```bash\nftp> put /path/readme.txt # 上传 readme.txt 文件\nftp> mput *.txt           # 可以上传多个文件\n```\n\n## 状态码\n\n- 230 - 登录成功\n- 200 - 命令执行成功\n- 150 - 文件状态正常，开启数据连接端口\n- 250 - 目录切换操作完成\n- 226 - 关闭数据连接端口，请求的文件操作成功\n\n## 参考资料\n\n- [Vsftpd虚拟用户的配置](http://hx100.blog.51cto.com/44326/383143/)\n- [CentOS7安装和配置FTP](http://www.cnblogs.com/flandre/p/6051532.html)"}}]);