(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{529:function(n,t){n.exports="\x3c!--\ntitle: Rocket.Chat\nsort: 5\n--\x3e\n\nRocket.Chat 开源IM系统部署，Rocket.Chat 是特性最丰富的 Slack 开源替代品之一。\n\n主要功能：群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频 聊天，截图等等。Rocket.Chat 原生支持 Windows，Mac OS X ，Linux，iOS 和 Android 平台。Rocket.Chat 通过 hubot 集成了非常流行的服务，比如 GitHub，GitLab，Confluence，JIRA 等等。\n\n高级的特性包括：OTR 消息，XMPP 多用户聊天，Kerberos 认证，p2p 文件分享等等。\n\n以下教程是在 `CentOS Linux release 7.2.1511 (Core)` 下安装 `Rocket.Chat`，可以通过官方教程安装在这里：[Deploying Rocket.Chat on Centos 7](https://rocket.chat/docs/installation/manual-installation/centos/)。\n\n主要依赖三个工具 `Nginx`、`CentOS 7`、`Mongodb`\n\n![](img/screenshot.png)\n\n## 安装依赖步骤\n\n添加epel存储库并更新所有内容。\n\n```bash\nyum -y install epel-release && yum -y update\n```\n\n一般情况下，新系统自带`curl`工具，没有的话你需要安装，后面会用到，如下：\n\n```bash\nyum install -y curl\n```\n\n安装 `node.js` 和 `npm`\n\n```bash\nyum install -y nodejs npm\n# node版本很重要需要安装`n`来切换版本\nnpm install -g inherits n\n# 切换node版本, 很重要\nn 4.8.4\n```\n\n安装meteor\n\n```bash\ncurl https://install.meteor.com | sh\n```\n\n## 安装Mongodb数据库\n\n安装使用`Mongodb`，先添加 `yum repo`\n\n```bash\nvi /etc/yum.repos.d/mongodb.repo\n```\n\n复制下面内容，保存并退出`:wq`\n\n```bash\n[mongodb]\nname=MongoDB Repository\nbaseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/\ngpgcheck=0\nenabled=1\n```\n\n安装图形库以及`Mongodb`数据库\n\n```bash\nyum install -y GraphicsMagick mongodb-org-server mongodb-org gcc-c++\n```\n\n提前配置数据库\n\n```bash\n# 启动MongoDB\nservice mongod start\n\n# 连接MongoDB\nmongo\n> use rocketchat # 添加数据库\n> exit\n## 重启数据库\nservice mongod restart\n```\n\n## 安装Rocket.Chat\n\n安装的时候记得前面加上`sudo`\n\n```bash\ncd /opt\ncurl -L https://download.rocket.chat/stable -o rocket.chat.tgz\n# 解压 rocket.chat.tgz\ntar zxvf rocket.chat.tgz\nmv bundle Rocket.Chat\ncd Rocket.Chat/programs/server\n# ========sudo很重要===========\nsudo npm install # 记得前面加上sudo\ncd ../..\n```\n\n直接在命令行中运行下面命令，配置 `PORT`, `ROOT_URL` 和 `MONGO_URL`:\n\n```bash\nexport PORT=3000\nexport ROOT_URL=http://127.0.0.1:3000/\nexport MONGO_URL=mongodb://localhost:27017/rocketchat\n```\n\n将3000替换为您选择的端口，一般情况默认就好。\n如果您选择使用端口80，则需要以root身份运行Rocket.Chat。\n如果您没有配置DNS，请使用您的IP代替主机名。 您可以稍后在管理员菜单中进行更改。\n\n## 启动服务\n\n首先让Mongodb使用以下命令启动主机：\n\n```bash\nchkconfig mongod on\n```\n\n现在我们需要启动mongo：\n\n```bash\nsystemctl start mongod\n# CentOS 6.X\n/etc/init.d/mongod start\n```\n\n尝试安装\n\n现在让我们做一个快速测试，看看是否一切正常，然后再继续：\n\n```bash\nnode main.js\n```\n\n```bash\nmeteor npm install --save bcrypt\n```\n\n使用上面的连接地址 `http://127.0.0.1:3000/`在浏览器中打开，点击`注册新账号`，输入`管理员姓名`，`电子邮件`，`两次密码`，如下：\n\n```bash\n姓名：admin\n电子邮件：admin@admin.com\n密码：test1234\n```\n\n点击提交，系统会提示你选择一个用户，直接选择管理员，点击使用此用户名继续。\n\n\n```bash\nError: MONGO_URL must be set in environment\n```\n\n报`node-v46-linux-x64`不存在错误 直接更改文件夹名字就解决了。\n\n```bash\ncd /opt/Rocket.Chat/programs/server/npm/node_modules/meteor/rocketchat_google-vision/node_modules/grpc/src/node/extension_binary/\nmv node-v48-linux-x64 node-v46-linux-x64/\n```\n\n## 开机启动\n\n```bash\nvi /usr/lib/systemd/system/rocketchat.service\n```\n\n将下面内容复制到上面文件中。\n\n```\n[Unit]\nDescription=The Rocket.Chat server\nAfter=network.target remote-fs.target nss-lookup.target nginx.target mongod.target\n[Service]\nExecStart=/usr/local/bin/node /opt/Rocket.Chat/main.js\nStandardOutput=syslog\nStandardError=syslog\nSyslogIdentifier=rocketchat\nUser=root\nEnvironment=MONGO_URL=mongodb://localhost:27017/rocketchat ROOT_URL=http://your-host-name.com-as-accessed-from-internet:3000/ PORT=3000\n[Install]\nWantedBy=multi-user.target\n```\n\n现在可以运行以下命令来启用此服务：\n\n```bash\nsystemctl enable rocketchat.service\n```\n\n最后通过运行来启动它，你就不需要：\n\n```bash\nsystemctl start rocketchat.service\n```\n\n## 更新升级\n\n```bash\n# 停止服务\nsystemctl stop rocketchat.service\n# 进入安装目录\ncd /opt/\n# 删除Rocket.Chat目录，删除前记得备份哦\nrm -rf Rocket.Chat\n```\n\n上面操作完成，将[安装Rocket.Chat](#安装rocketchat)步骤再操作一遍，记得数据库不要动就可以了。\n\n## 错误处理\n\n1. Error: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found\n\n```bash\nstrings /usr/lib64/libstdc++.so.6 | grep GLIBCXX\n\n# GLIBCXX_3.4\n# ....\n# GLIBCXX_3.4.15\n# GLIBCXX_3.4.16\n# GLIBCXX_3.4.17\n# GLIBCXX_3.4.18\n# GLIBCXX_3.4.19\n# GLIBCXX_DEBUG_MESSAGE_LENGTH\n```\n\n发现少了GLIBCXX_3.4.20，解决方法是升级libstdc++.\n\n```bash\nyum provides libstdc++.so.6\n# Loaded plugins: fastestmirror\n# Loading mirror speeds from cached hostfile\n#  * base: ftp.sjtu.edu.cn\n#  * epel: mirrors.ustc.edu.cn\n#  * extras: ftp.sjtu.edu.cn\n#  * updates: ftp.sjtu.edu.cn\n# libstdc++-4.8.5-16.el7.i686 : GNU Standard C++ Library\n# Repo        : base\n# Matched from:\n# Provides    : libstdc++.so.6\n# \n# libstdc++-4.8.5-16.el7_4.1.i686 : GNU Standard C++ Library\n# Repo        : updates\n# Matched from:\n# Provides    : libstdc++.so.6\nyum install libstdc++-4.8.5-16.el7_4.1.i686\n```\n\n如果上面还不能解决你的问题，需要升级 `gcc` 到 `4.9+` 的版本\n\n```bash\nsudo yum install libmpc-devel mpfr-devel gmp-devel\n\ncd ~/Downloads\ncurl ftp://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-4.9.2/gcc-4.9.2.tar.bz2 -O\ntar xvfj gcc-4.9.2.tar.bz2\n\ncd gcc-4.9.2\n./configure --disable-multilib --enable-languages=c,c++\n# 处理过程非常长 搞了两个多小时\nmake -j 4\nmake install\n\n# 用最新的libstdc++.so.6替换旧的\nsudo cp /usr/local/lib64/libstdc++.so.6 /lib64/\n```\n\n"}}]);