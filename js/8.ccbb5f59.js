(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{526:function(n,e){n.exports='\x3c!--\ntitle: npm\nsort: 3\n--\x3e\n\n在5分钟内搭建企业内部私有npm仓库\n\n下面通过三种方法来搭建公司私有npm仓库，每种方式都有自己的优势。\n\n> Node.js >= 6.11.3，我的Node版本：node v8.2.1  \n> Linux or OSX，我的系统版本：CentOS Linux release 7.2.1511 (Core)  \n\n## cnpm搭建\n\n[cnpmjs.org](https://github.com/cnpm/cnpmjs.org)\n\n### 安装\n\n```bash\nnpm install -g --build-from-source cnpmjs.org cnpm sqlite3\n# 如果报错或者警告通过下面方式安装\nnpm install -g --unsafe-perm --verbose --build-from-source cnpmjs.org cnpm sqlite3\n```\n\n如果安装不流畅通过下面形式安装：\n\n```bash\nnpm install -g --build-from-source \\\n  --registry=https://registry.npm.taobao.org \\\n  --disturl=https://npm.taobao.org/mirrors/node \\\n  cnpmjs.org cnpm sqlite3\n```\n\n如果报警告或者安装错误，请添加参数`--unsafe-perm --verbose`\n\n### 启动并配置服务\n\n> 管理员：`myname,othername`  \n> 范围：`my-company-name,other-name`  \n> 默认端口：7001-registry, 7002-web\n\n启动服务\n\n```bash\n$ nohup cnpmjs.org start --admins=\'myname,othername\' \\\n  --scopes=\'@my-company-name,@other-name\' &\n```\n\n### 设置注册地址\n\n将cnpm默认注册地址更改为私有注册地址\n\n```bash\ncnpm set registry http://localhost:7001\n```\n\n### 登录cnpm\n\n```bash\n$ cnpm login\nUsername: myname\nPassword: ***\nEmail: (this IS public) test@test.com\n```\n\n### 包上传到私有仓库\n\n新建项目\n\n```\n$ cd /tmp\n$ mkdir helloworld && cd helloworld\n$ cnpm init\nname: (helloworld) @my-company-name/helloworld\nversion: (1.0.0)\n\n{\n  "name": "@my-company-name/helloworld",\n  "version": "1.0.0",\n  "description": "my first scoped package",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "author": "",\n  "license": "ISC"\n}\n```\n\n上传到私有仓库\n\n```bash\n$ cnpm publish\n+ @my-company-name/helloworld@1.0.0\n```\n\n### 查看预览包\n\n浏览器中预览\n\n```bash\nopen http://localhost:7002/@my-company-name/helloworld\n```\n\n使用`cnpm`预览\n\n```\ncnpm info\n```\n\n### 安装\n\n所有公共包都可直接使用`cnpm`安装\n\n```bash\ncnpm install hotkeys-js\n```\n\n\n## 通过verdaccio搭建\n\n[verdaccio](https://github.com/verdaccio/verdaccio) 是一个轻量级的私有npm代理注册。（[sinopia](https://github.com/rlidwka/sinopia) fork）\n\n### 安装\n\n```bash\n# 使用 npm 安装\nnpm install -g npm\n\n# 使用 yarn 安装\nyarn global add verdaccio\n```\n\n### 启动服务\n\n```bash\nverdaccio -l 192.168.188.224:4873 >> verdaccio.log 2>&1 &\nverdaccio >> verdaccio.log 2>&1 & # 后台启动并写入日志\n\n# Verdaccio doesn\'t need superuser privileges. Don\'t run it under root.\n# warn --- config file  - /root/.config/verdaccio/config.yaml\n# warn --- http address - http://localhost:4873/ - verdaccio/2.3.6\n\nverdaccio --listen 4000 --config ./config.yaml # 指定配置启动\n```\n\n### 添加用户/登录\n\n```bash\nnpm adduser --registry  http://localhost:4873\n```\n\n### 上传私有包\n\n```bash\nnpm publish --registry http://localhost:4873\n```\n\n### 本地配置注册地址\n\n```bash\nnpm config list -l # 查看默认配置\n# 将默认地址 https://registry.npmjs.org/ 改成私有地址\nnpm set registry http://localhost:4873\n# 如果您使用HTTPS，请添加适当的CA信息\n#（“null”表示从操作系统获取CA列表）\n$ npm set ca null\n```\n\n## Git仓库当私有npm\n\n这个方法得益于，npm提供的的丰富安装方法。通过下面方法安装：\n\n```bash\nnpm i -S git+ssh://git@git.showgold.cn:npm/hello.git\n\nnpm install -S git+ssh://git@github.com:npm/npm.git#v1.0.27\nnpm install -S git+ssh://git@github.com:npm/npm#semver:^5.0\nnpm install -S git+https://isaacs@github.com/npm/npm.git\nnpm install -S git://github.com/npm/npm.git#v1.0.27\n```\n\n⚠️ 上面安装需要注意：你的工程一定是在某一个组下面建立，方便管理，在生成你的包的时候`package.json`中的`name`一定要带上范围\n\n### 建立一个私有模块\n\n```bash\n# 假设你建立了一个Git仓库，先克隆下来\ngit clone http://git.your-inc.com/companyfe/hello-private.git\n\n# 生成 `package.json` 配置, 注意限定 `@scope` 范围\nnpm init --scope=companyfe\n# 提交到仓库\ngit push origin master\n```\n\n⚠️ 将得到如下依赖，注意：\n\n> `name`字段必须限定范围，一般为 GitLab group 的名字, 例如 `@companyfe`, 那么 `name` 为: `@companyfe/hello-private`。  \n> `private` 设为 `true` 防止将私有模块上传到公网上去，需要手动设置一下。  \n\n```json\n{\n  "name": "@companyfe/hello-private",\n  "version": "1.0.1",\n  "description": "",\n  "main": "index.js",\n  "private":true,\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "author": "kenny wang <wowohoo@qq.com> (http://wangchujiang.com)",\n  "license": "ISC"\n}\n```\n\n### 安装使用私有模块\n\n跟安装开源的模块一样, 使用 `npm install` 安装依赖即可. 私有模块会安装在 `@scope` 的子文件夹中, 例如: `node_modules/@companyfe/hello-private`.\n\n```bash\n# 基础安装\nnpm i -S git+ssh://git@git.your-inc.com/companyfe/hello-private.git\n# 带版本信息的，必须通过 git 打 tag\nnpm i -S git+ssh://git@git.your-inc.com/companyfe/hello-private.git#v1.2.0\n```\n\n将得到如下依赖\n\n```json\n{\n  "name": "helloworld",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "dependencies": {\n    "@companyfe/hello-private": "git+ssh://git@git.your-inc.com/companyfe/hello-private.git#v1.2.0"\n  },\n  "author": "kenny wang <wowohoo@qq.com> (http://wangchujiang.com)",\n  "license": "ISC"\n}\n```\n\n使用私有模块\n\n```js\nvar hello = require(\'@companyfe/hello-private\');\n```\n\n### 优劣势\n\n不好的地方是，使用 `npm update` 是无法更新私有模块，想更新只能重新安装一次。好处是不用搭建服务。\n\n## 参考资料\n\n- [Can I run my own private registry?](https://docs.npmjs.com/misc/registry#can-i-run-my-own-private-registry)'}}]);